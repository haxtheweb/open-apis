{
  "version": 1,
  "tags": [
    {
      "name": "simple-drawer",
      "description": "`simple-drawer`\n`a singleton drawer element`\n\nEvents:\n\n  * `resize` {`Event`} - \n\n  * `simple-drawer-closed` {`CustomEvent<{ opened: boolean; invokedBy: any; }>`} - \n\n  * `simple-drawer-opened` {`CustomEvent<{ opened: boolean; invokedBy: any; }>`} - \n\nAttributes:\n\n  * `invokedBy` - The element that invoked this. This way we can track our way back accessibly\n\n  * `title` {`string`} - heading / label of the modal\n\n  * `align` {`string`} - alignment of the drawer\n\n  * `opened` {`boolean`} - open state\n\n  * `closeLabel` {`string`} - Close label\n\n  * `closeIcon` {`string`} - Close icon\n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `invokedBy` - The element that invoked this. This way we can track our way back accessibly\n\n  * `windowControllers` - \n\n  * `title` {`string`} - heading / label of the modal\n\n  * `align` {`string`} - alignment of the drawer\n\n  * `opened` {`boolean`} - open state\n\n  * `closeLabel` {`string`} - Close label\n\n  * `closeIcon` {`string`} - Close icon\n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "invokedBy",
          "description": "`invokedBy` - The element that invoked this. This way we can track our way back accessibly\n\nProperty: invokedBy"
        },
        {
          "name": "title",
          "description": "`title` {`string`} - heading / label of the modal\n\nProperty: title\n\nDefault: "
        },
        {
          "name": "align",
          "description": "`align` {`string`} - alignment of the drawer\n\nProperty: align\n\nDefault: left"
        },
        {
          "name": "opened",
          "description": "`opened` {`boolean`} - open state\n\nProperty: opened\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "closeLabel",
          "description": "`closeLabel` {`string`} - Close label\n\nProperty: closeLabel\n\nDefault: Close"
        },
        {
          "name": "closeIcon",
          "description": "`closeIcon` {`string`} - Close icon\n\nProperty: closeIcon\n\nDefault: icons:cancel"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onresize",
          "description": "`resize` {`Event`} - "
        },
        {
          "name": "onsimple-drawer-closed",
          "description": "`simple-drawer-closed` {`CustomEvent<{ opened: boolean; invokedBy: any; }>`} - "
        },
        {
          "name": "onsimple-drawer-opened",
          "description": "`simple-drawer-opened` {`CustomEvent<{ opened: boolean; invokedBy: any; }>`} - "
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}