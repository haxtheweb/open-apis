{
  "version": 1,
  "tags": [
    {
      "name": "progress-donut",
      "description": "`progress-donut`\n\nEvents:\n\n  * `chartist-render-ready` {`CustomEvent<this>`} - Fired once once chart is ready.\n\n  * `chart-data-changed` {`CustomEvent<this>`} - Fires when chartData changes\n\n  * `data-source-changed` {`CustomEvent<this>`} - Fires when data-source changes\n\n  * `data-changed` {`CustomEvent<this>`} - Fires when data changes\n\n  * `chartist-render-data` {`CustomEvent<any>`} - Fired when chart is rendering.\n\n  * `chartist-render-created` {`CustomEvent<any>`} - Fired once chart is created features are added.\n\n  * `chartist-render-draw` {`CustomEvent<any>`} - Fired as shapes are being drawn.\n\nAttributes:\n\n  * `animation` {`number`} - Timing for animation or -1 for false\n\n  * `animation-delay` {`number`} - Timing for animation or 0 none\n\n  * `complete` {`any[]`} - An array of completed values\n\n  * `desc` {`string`} - Accessible long description\n\n  * `image-src` {`string`} - Source of image in the center of the object.\n\n  * `image-alt` {`string`} - Alt text for image.\n\n  * `chartPadding` {`number`} - Padding of chart drawing area to container element and labels\n\n  * `donut` {`boolean`} - Displays chart as donut instead of pie.\n\n  * `donutSolid` {`boolean`} - Draw donut segments as shapes instead of strokes.\n\n  * `donutWidth` {`number`} - Donut stroke width, currently done in javascript.\n\n  * `ignoreEmptyValues` {`boolean`} - Empty values will be ignored to avoid drawing\nunncessary slices and labels\n\n  * `labelDirection` {`string`} - Label direction can be 'neutral', 'explode' or 'implode'.\nThe labels anchor will be positioned based on those settings\nas well as the fact if the labels are on the right or\nleft side of the center of the chart.\nUsually explode is useful when labels are positioned\nfar away from the center.\n\n  * `labelOffset` {`number`} - Label position offset from the standard position\nwhich is half distance of the radius.\nThis value can be either positive or negative.\nPositive values will position the label away from the center.\n\n  * `label-position` {`string`} - This option can be set to 'inside', 'outside' or 'center'.\nPositioned with 'inside' the labels will be placed on half the distance\nof the radius to the border of the Pie by respecting the 'labelOffset'.\nThe 'outside' option will place the labels at the border of the pie\nand 'center' will place the labels in the absolute center point\nof the chart. The 'center' option only makes sense\nin conjunction with the 'labelOffset' option.\n\n  * `showLabel` {`boolean`} - If a label should be shown.\n\n  * `startAngle` {`number`} - Start angle of the pie chart in degrees where 0 points north.\nA higher value offsets the start angle clockwise..\n\n  * `total` {`number`} - Optional total you can specify. By specifying a total value,\nthe sum of the values in the series must be this total in order\nto draw a full pie. You can use this parameter to draw only parts\nof a pie or gauge charts.\n\n  * `height` {`string`} - Fixed height for the chart as a string (i.e. '100px' or '50%').\n\n  * `reverse-data` {`boolean`} - Reverse data including labels, the series order as well as\nthe whole series data arrays.\n\n  * `width` {`string`} - Fixed width for the chart as a string (i.e. '100px' or '50%').\n\n  * `chart-title` {`string`} - DEPRECATED: Use heading slot instead for progressive enhancement.\n\n  * `chart-data` {`any[]`} - Raw data pulled in from the csv file and converted to an array.\n\n  * `chart-desc` {`string`} - DEPRECATED: Use desc slot instead for progressive enhancement.\n\n  * `options` {`any[]`} - gets options as an array\n\n  * `pluginAxisTitle` - Optional data for chartist-plugin-axistitle,\nas in { axisX: { axisTitle: \"Time (mins)\", offset: { x: 0, y: 50 }, textAnchor: \"middle\" }, axisY: { axisTitle: \"Goals\", axisClass: \"ct-axis-title\", offset: { x: 0, y: -1 }, flipTitle: false } }\nSee https://github.com/alexstanbury/chartist-plugin-axistitle\n\n  * `pluginPointLabels` - Optional data for chartist-plugin-pointlabels,\nas in { labelOffset: { x: 0, y: -10 }, textAnchor: 'middle', labelInterpolationFnc: Chartist.noop }\nSee https://github.com/gionkunz/chartist-plugin-pointlabels\n\n  * `pluginFillDonutItems` {`any[]`} - Optional array of items for chartist-plugin-filldonut,\nas in items : [{ class : '', id: '', content : 'fillText', position: 'center', offsetY: 0, offsetX: 0 }]\nSee https://github.com/moxx/chartist-plugin-fill-donut\n\n  * `id` {`string`} - The unique identifier of the chart.\n\n  * `type` {`string`} - The type of chart:bar, line, or pie\n\n  * `scale` {`string`} - The scale of the chart. (See https://gionkunz.github.io/chartist-js/api-documentation.html)```\nContainer class\tRatio\n.ct-square          1\n.ct-minor-second\t  15:16\n.ct-major-second\t  8:9\n.ct-minor-third\t    5:6\n.ct-major-third\t    4:5\n.ct-perfect-fourth\t3:4\n.ct-perfect-fifth\t  2:3\n.ct-minor-sixth\t    5:8\n.ct-golden-section\t1:1.618\n.ct-major-sixth\t    3:5\n.ct-minor-seventh\t  9:16\n.ct-major-seventh\t  8:15\n.ct-octave\t        1:2\n.ct-major-tenth\t    2:5\n.ct-major-eleventh\t3:8\n.ct-major-twelfth\t  1:3\n.ct-double-octave\t  1:4```\n\n  * `responsive-options` {`any[]`} - The responsive options.\n\nFrom https://gionkunz.github.io/chartist-js/api-documentation.html:\n\nIn addition to the regular options we specify responsive option \noverrides that will override the default configutation based \non the matching media queries.\n\n`var responsiveOptions = [\n  ['screen and (min-width: 641px) and (max-width: 1024px)', {\n    showPoint: false,\n    axisX: {\n      labelInterpolationFnc: function(value) {\n        // Will return Mon, Tue, Wed etc. on medium screens\n        return value.slice(0, 3);\n      }\n    }\n  }],\n  ['screen and (max-width: 640px)', {\n    showLine: false,\n    axisX: {\n      labelInterpolationFnc: function(value) {\n        // Will return M, T, W etc. on small screens\n        return value[0];\n      }\n    }\n  }]\n];`\n\n  * `data` - Use an accessible table in unnamed slot for maxium accessibility and SEO.\nAs table:\n<table>\n     <thead><tr><th scope=\"col\">label 1</th>...</tr></thead>\n     <tbody><tr><td>1</td>...</tr>...</tbody>\n</table>\n\nDEPRECATED Method:\n{\n   labels: [\"label 1\", \"label 2\", \"label 3\"]\n   series: [\n     [1,2,3],\n     [4,5,6]\n   ]\n}\n\n  * `data-source` {`string`} - Location of the CSV file.\n\n  * `show-table` {`boolean`} - The show data in table form as well? Default is false.\n\n  * `accent-color` {`string`} - Location of the CSV file.\n\n  * `dark` {`boolean`} - Location of the CSV file.\n\nProperties:\n\n  * `donutData` - \n\n  * `donutLabels` - \n\n  * `donutTotal` {`number`} - \n\n  * `animation` {`number`} - Timing for animation or -1 for false\n\n  * `animationDelay` {`number`} - Timing for animation or 0 none\n\n  * `complete` {`any[]`} - An array of completed values\n\n  * `desc` {`string`} - Accessible long description\n\n  * `imageSrc` {`string`} - Source of image in the center of the object.\n\n  * `imageAlt` {`string`} - Alt text for image.\n\n  * `chartPadding` {`number`} - Padding of chart drawing area to container element and labels\n\n  * `donut` {`boolean`} - Displays chart as donut instead of pie.\n\n  * `donutSolid` {`boolean`} - Draw donut segments as shapes instead of strokes.\n\n  * `donutWidth` {`number`} - Donut stroke width, currently done in javascript.\n\n  * `ignoreEmptyValues` {`boolean`} - Empty values will be ignored to avoid drawing\nunncessary slices and labels\n\n  * `labelDirection` {`string`} - Label direction can be 'neutral', 'explode' or 'implode'.\nThe labels anchor will be positioned based on those settings\nas well as the fact if the labels are on the right or\nleft side of the center of the chart.\nUsually explode is useful when labels are positioned\nfar away from the center.\n\n  * `labelOffset` {`number`} - Label position offset from the standard position\nwhich is half distance of the radius.\nThis value can be either positive or negative.\nPositive values will position the label away from the center.\n\n  * `labelPosition` {`string`} - This option can be set to 'inside', 'outside' or 'center'.\nPositioned with 'inside' the labels will be placed on half the distance\nof the radius to the border of the Pie by respecting the 'labelOffset'.\nThe 'outside' option will place the labels at the border of the pie\nand 'center' will place the labels in the absolute center point\nof the chart. The 'center' option only makes sense\nin conjunction with the 'labelOffset' option.\n\n  * `showLabel` {`boolean`} - If a label should be shown.\n\n  * `startAngle` {`number`} - Start angle of the pie chart in degrees where 0 points north.\nA higher value offsets the start angle clockwise..\n\n  * `total` {`number`} - Optional total you can specify. By specifying a total value,\nthe sum of the values in the series must be this total in order\nto draw a full pie. You can use this parameter to draw only parts\nof a pie or gauge charts.\n\n  * `height` {`string`} - Fixed height for the chart as a string (i.e. '100px' or '50%').\n\n  * `reverseData` {`boolean`} - Reverse data including labels, the series order as well as\nthe whole series data arrays.\n\n  * `width` {`string`} - Fixed width for the chart as a string (i.e. '100px' or '50%').\n\n  * `axisTitles` {`{ axisX: { axisTitle: any; offset: { x: number | undefined; y: number | undefined; }; textAnchor: string | undefined; }; axisY: { axisTitle: any; offset: { x: number | undefined; y: number | undefined; }; textAnchor: string | undefined; }; } | undefined`} - gets axis title options\n\n  * `lineBarOptions` - override this with type-specific options\n\n  * `chartTitle` {`string`} - DEPRECATED: Use heading slot instead for progressive enhancement.\n\n  * `chartData` {`any[]`} - Raw data pulled in from the csv file and converted to an array.\n\n  * `chartDesc` {`string`} - DEPRECATED: Use desc slot instead for progressive enhancement.\n\n  * `options` {`any[]`} - gets options as an array\n\n  * `pluginAxisTitle` - Optional data for chartist-plugin-axistitle,\nas in { axisX: { axisTitle: \"Time (mins)\", offset: { x: 0, y: 50 }, textAnchor: \"middle\" }, axisY: { axisTitle: \"Goals\", axisClass: \"ct-axis-title\", offset: { x: 0, y: -1 }, flipTitle: false } }\nSee https://github.com/alexstanbury/chartist-plugin-axistitle\n\n  * `pluginPointLabels` - Optional data for chartist-plugin-pointlabels,\nas in { labelOffset: { x: 0, y: -10 }, textAnchor: 'middle', labelInterpolationFnc: Chartist.noop }\nSee https://github.com/gionkunz/chartist-plugin-pointlabels\n\n  * `pluginFillDonutItems` {`any[]`} - Optional array of items for chartist-plugin-filldonut,\nas in items : [{ class : '', id: '', content : 'fillText', position: 'center', offsetY: 0, offsetX: 0 }]\nSee https://github.com/moxx/chartist-plugin-fill-donut\n\n  * `plugins` {`string[][]`} - an array of plugins to load as [ [classname,  relativePath] ]\n\n  * `observer` - mutation observer for table\n\n  * `fullOptions` - gets options plus plugins\n\n  * `windowControllers` - \n\n  * `id` {`string`} - The unique identifier of the chart.\n\n  * `type` {`string`} - The type of chart:bar, line, or pie\n\n  * `scale` {`string`} - The scale of the chart. (See https://gionkunz.github.io/chartist-js/api-documentation.html)```\nContainer class\tRatio\n.ct-square          1\n.ct-minor-second\t  15:16\n.ct-major-second\t  8:9\n.ct-minor-third\t    5:6\n.ct-major-third\t    4:5\n.ct-perfect-fourth\t3:4\n.ct-perfect-fifth\t  2:3\n.ct-minor-sixth\t    5:8\n.ct-golden-section\t1:1.618\n.ct-major-sixth\t    3:5\n.ct-minor-seventh\t  9:16\n.ct-major-seventh\t  8:15\n.ct-octave\t        1:2\n.ct-major-tenth\t    2:5\n.ct-major-eleventh\t3:8\n.ct-major-twelfth\t  1:3\n.ct-double-octave\t  1:4```\n\n  * `responsiveOptions` {`any[]`} - The responsive options.\n\nFrom https://gionkunz.github.io/chartist-js/api-documentation.html:\n\nIn addition to the regular options we specify responsive option \noverrides that will override the default configutation based \non the matching media queries.\n\n`var responsiveOptions = [\n  ['screen and (min-width: 641px) and (max-width: 1024px)', {\n    showPoint: false,\n    axisX: {\n      labelInterpolationFnc: function(value) {\n        // Will return Mon, Tue, Wed etc. on medium screens\n        return value.slice(0, 3);\n      }\n    }\n  }],\n  ['screen and (max-width: 640px)', {\n    showLine: false,\n    axisX: {\n      labelInterpolationFnc: function(value) {\n        // Will return M, T, W etc. on small screens\n        return value[0];\n      }\n    }\n  }]\n];`\n\n  * `data` - Use an accessible table in unnamed slot for maxium accessibility and SEO.\nAs table:\n<table>\n     <thead><tr><th scope=\"col\">label 1</th>...</tr></thead>\n     <tbody><tr><td>1</td>...</tr>...</tbody>\n</table>\n\nDEPRECATED Method:\n{\n   labels: [\"label 1\", \"label 2\", \"label 3\"]\n   series: [\n     [1,2,3],\n     [4,5,6]\n   ]\n}\n\n  * `dataSource` {`string`} - Location of the CSV file.\n\n  * `showTable` {`boolean`} - The show data in table form as well? Default is false.\n\n  * `__chartId` {`string`} - \n\n  * `accentColor` {`string`} - Location of the CSV file.\n\n  * `dark` {`boolean`} - Location of the CSV file.\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "animation",
          "description": "`animation` {`number`} - Timing for animation or -1 for false\n\nProperty: animation\n\nDefault: -1"
        },
        {
          "name": "animation-delay",
          "description": "`animation-delay` {`number`} - Timing for animation or 0 none\n\nProperty: animationDelay\n\nDefault: 0"
        },
        {
          "name": "complete",
          "description": "`complete` {`any[]`} - An array of completed values\n\nProperty: complete\n\nDefault: "
        },
        {
          "name": "desc",
          "description": "`desc` {`string`} - Accessible long description\n\nProperty: desc\n\nDefault: "
        },
        {
          "name": "image-src",
          "description": "`image-src` {`string`} - Source of image in the center of the object.\n\nProperty: imageSrc\n\nDefault: "
        },
        {
          "name": "image-alt",
          "description": "`image-alt` {`string`} - Alt text for image.\n\nProperty: imageAlt\n\nDefault: "
        },
        {
          "name": "chartPadding",
          "description": "`chartPadding` {`number`} - Padding of chart drawing area to container element and labels\n\nProperty: chartPadding"
        },
        {
          "name": "donut",
          "description": "`donut` {`boolean`} - Displays chart as donut instead of pie.\n\nProperty: donut\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "donutSolid",
          "description": "`donutSolid` {`boolean`} - Draw donut segments as shapes instead of strokes.\n\nProperty: donutSolid",
          "valueSet": "v"
        },
        {
          "name": "donutWidth",
          "description": "`donutWidth` {`number`} - Donut stroke width, currently done in javascript.\n\nProperty: donutWidth"
        },
        {
          "name": "ignoreEmptyValues",
          "description": "`ignoreEmptyValues` {`boolean`} - Empty values will be ignored to avoid drawing\nunncessary slices and labels\n\nProperty: ignoreEmptyValues",
          "valueSet": "v"
        },
        {
          "name": "labelDirection",
          "description": "`labelDirection` {`string`} - Label direction can be 'neutral', 'explode' or 'implode'.\nThe labels anchor will be positioned based on those settings\nas well as the fact if the labels are on the right or\nleft side of the center of the chart.\nUsually explode is useful when labels are positioned\nfar away from the center.\n\nProperty: labelDirection"
        },
        {
          "name": "labelOffset",
          "description": "`labelOffset` {`number`} - Label position offset from the standard position\nwhich is half distance of the radius.\nThis value can be either positive or negative.\nPositive values will position the label away from the center.\n\nProperty: labelOffset"
        },
        {
          "name": "label-position",
          "description": "`label-position` {`string`} - This option can be set to 'inside', 'outside' or 'center'.\nPositioned with 'inside' the labels will be placed on half the distance\nof the radius to the border of the Pie by respecting the 'labelOffset'.\nThe 'outside' option will place the labels at the border of the pie\nand 'center' will place the labels in the absolute center point\nof the chart. The 'center' option only makes sense\nin conjunction with the 'labelOffset' option.\n\nProperty: labelPosition"
        },
        {
          "name": "showLabel",
          "description": "`showLabel` {`boolean`} - If a label should be shown.\n\nProperty: showLabel\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "startAngle",
          "description": "`startAngle` {`number`} - Start angle of the pie chart in degrees where 0 points north.\nA higher value offsets the start angle clockwise..\n\nProperty: startAngle"
        },
        {
          "name": "total",
          "description": "`total` {`number`} - Optional total you can specify. By specifying a total value,\nthe sum of the values in the series must be this total in order\nto draw a full pie. You can use this parameter to draw only parts\nof a pie or gauge charts.\n\nProperty: total"
        },
        {
          "name": "height",
          "description": "`height` {`string`} - Fixed height for the chart as a string (i.e. '100px' or '50%').\n\nProperty: height"
        },
        {
          "name": "reverse-data",
          "description": "`reverse-data` {`boolean`} - Reverse data including labels, the series order as well as\nthe whole series data arrays.\n\nProperty: reverseData",
          "valueSet": "v"
        },
        {
          "name": "width",
          "description": "`width` {`string`} - Fixed width for the chart as a string (i.e. '100px' or '50%').\n\nProperty: width"
        },
        {
          "name": "chart-title",
          "description": "`chart-title` {`string`} - DEPRECATED: Use heading slot instead for progressive enhancement.\n\nProperty: chartTitle"
        },
        {
          "name": "chart-data",
          "description": "`chart-data` {`any[]`} - Raw data pulled in from the csv file and converted to an array.\n\nProperty: chartData"
        },
        {
          "name": "chart-desc",
          "description": "`chart-desc` {`string`} - DEPRECATED: Use desc slot instead for progressive enhancement.\n\nProperty: chartDesc"
        },
        {
          "name": "options",
          "description": "`options` {`any[]`} - gets options as an array\n\nProperty: options"
        },
        {
          "name": "pluginAxisTitle",
          "description": "`pluginAxisTitle` - Optional data for chartist-plugin-axistitle,\nas in { axisX: { axisTitle: \"Time (mins)\", offset: { x: 0, y: 50 }, textAnchor: \"middle\" }, axisY: { axisTitle: \"Goals\", axisClass: \"ct-axis-title\", offset: { x: 0, y: -1 }, flipTitle: false } }\nSee https://github.com/alexstanbury/chartist-plugin-axistitle\n\nProperty: pluginAxisTitle"
        },
        {
          "name": "pluginPointLabels",
          "description": "`pluginPointLabels` - Optional data for chartist-plugin-pointlabels,\nas in { labelOffset: { x: 0, y: -10 }, textAnchor: 'middle', labelInterpolationFnc: Chartist.noop }\nSee https://github.com/gionkunz/chartist-plugin-pointlabels\n\nProperty: pluginPointLabels"
        },
        {
          "name": "pluginFillDonutItems",
          "description": "`pluginFillDonutItems` {`any[]`} - Optional array of items for chartist-plugin-filldonut,\nas in items : [{ class : '', id: '', content : 'fillText', position: 'center', offsetY: 0, offsetX: 0 }]\nSee https://github.com/moxx/chartist-plugin-fill-donut\n\nProperty: pluginFillDonutItems"
        },
        {
          "name": "id",
          "description": "`id` {`string`} - The unique identifier of the chart.\n\nProperty: id\n\nDefault: chart"
        },
        {
          "name": "type",
          "description": "`type` {`string`} - The type of chart:bar, line, or pie\n\nProperty: type\n\nDefault: bar"
        },
        {
          "name": "scale",
          "description": "`scale` {`string`} - The scale of the chart. (See https://gionkunz.github.io/chartist-js/api-documentation.html)```\nContainer class\tRatio\n.ct-square          1\n.ct-minor-second\t  15:16\n.ct-major-second\t  8:9\n.ct-minor-third\t    5:6\n.ct-major-third\t    4:5\n.ct-perfect-fourth\t3:4\n.ct-perfect-fifth\t  2:3\n.ct-minor-sixth\t    5:8\n.ct-golden-section\t1:1.618\n.ct-major-sixth\t    3:5\n.ct-minor-seventh\t  9:16\n.ct-major-seventh\t  8:15\n.ct-octave\t        1:2\n.ct-major-tenth\t    2:5\n.ct-major-eleventh\t3:8\n.ct-major-twelfth\t  1:3\n.ct-double-octave\t  1:4```\n\nProperty: scale\n\nDefault: ct-minor-seventh"
        },
        {
          "name": "responsive-options",
          "description": "`responsive-options` {`any[]`} - The responsive options.\n\nFrom https://gionkunz.github.io/chartist-js/api-documentation.html:\n\nIn addition to the regular options we specify responsive option \noverrides that will override the default configutation based \non the matching media queries.\n\n`var responsiveOptions = [\n  ['screen and (min-width: 641px) and (max-width: 1024px)', {\n    showPoint: false,\n    axisX: {\n      labelInterpolationFnc: function(value) {\n        // Will return Mon, Tue, Wed etc. on medium screens\n        return value.slice(0, 3);\n      }\n    }\n  }],\n  ['screen and (max-width: 640px)', {\n    showLine: false,\n    axisX: {\n      labelInterpolationFnc: function(value) {\n        // Will return M, T, W etc. on small screens\n        return value[0];\n      }\n    }\n  }]\n];`\n\nProperty: responsiveOptions\n\nDefault: "
        },
        {
          "name": "data",
          "description": "`data` - Use an accessible table in unnamed slot for maxium accessibility and SEO.\nAs table:\n<table>\n     <thead><tr><th scope=\"col\">label 1</th>...</tr></thead>\n     <tbody><tr><td>1</td>...</tr>...</tbody>\n</table>\n\nDEPRECATED Method:\n{\n   labels: [\"label 1\", \"label 2\", \"label 3\"]\n   series: [\n     [1,2,3],\n     [4,5,6]\n   ]\n}\n\nProperty: data\n\nDefault: "
        },
        {
          "name": "data-source",
          "description": "`data-source` {`string`} - Location of the CSV file.\n\nProperty: dataSource\n\nDefault: "
        },
        {
          "name": "show-table",
          "description": "`show-table` {`boolean`} - The show data in table form as well? Default is false.\n\nProperty: showTable\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - Location of the CSV file.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - Location of the CSV file.\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onchartist-render-ready",
          "description": "`chartist-render-ready` {`CustomEvent<this>`} - Fired once once chart is ready."
        },
        {
          "name": "onchart-data-changed",
          "description": "`chart-data-changed` {`CustomEvent<this>`} - Fires when chartData changes"
        },
        {
          "name": "ondata-source-changed",
          "description": "`data-source-changed` {`CustomEvent<this>`} - Fires when data-source changes"
        },
        {
          "name": "ondata-changed",
          "description": "`data-changed` {`CustomEvent<this>`} - Fires when data changes"
        },
        {
          "name": "onchartist-render-data",
          "description": "`chartist-render-data` {`CustomEvent<any>`} - Fired when chart is rendering."
        },
        {
          "name": "onchartist-render-created",
          "description": "`chartist-render-created` {`CustomEvent<any>`} - Fired once chart is created features are added."
        },
        {
          "name": "onchartist-render-draw",
          "description": "`chartist-render-draw` {`CustomEvent<any>`} - Fired as shapes are being drawn."
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}