{
  "version": 1,
  "tags": [
    {
      "name": "simple-autocomplete-text-trigger",
      "description": "Attributes:\n\n  * `target` - \n\n  * `triggers` - \n\n  * `value` {`string`} - \n\nProperties:\n\n  * `windowControllers` - \n\n  * `haxUIElement` {`boolean`} - \n\n  * `target` - \n\n  * `triggers` - \n\n  * `value` {`string`} - ",
      "attributes": [
        {
          "name": "target",
          "description": "`target` - \n\nProperty: target\n\nDefault: null"
        },
        {
          "name": "triggers",
          "description": "`triggers` - \n\nProperty: triggers\n\nDefault: [object Object]"
        },
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value\n\nDefault: "
        }
      ]
    },
    {
      "name": "simple-autocomplete",
      "description": "`simple-autocomplete`\n`auto complete either from an endpoint or local json array`\n\nEvents:\n\n  * `item-selected` {`CustomEvent<{ value: any; }>`} - \n\n  * `filter` {`CustomEvent<boolean>`} - \n\n  * `filtered-changed` {`CustomEvent<{ value: any[]; }>`} - \n\nAttributes:\n\n  * `item-limit` {`number`} - \n\n  * `hide-input` {`boolean`} - \n\n  * `selection-position` {`boolean`} - \n\n  * `value` {`string`} - \n\n  * `opened` {`boolean`} - \n\n  * `items` {`any[]`} - These are the items to be filtered\n\n  * `like` {`string`} - Filter regular expression string\n\n  * `where` {`string`} - The filter-by field of your items array of objects\n\n  * `case-sensitive` {`boolean`} - Enable case sensitivity when filtering\n\n  * `filtered` {`any[]`} - Filtered items\n\n  * `multi-match` {`boolean`} - Enable multi match when filtering so that space separated words are matched\nas separate words as opposed to a single phrase\n\nProperties:\n\n  * `itemLimit` {`number`} - \n\n  * `hideInput` {`boolean`} - \n\n  * `selectionPosition` {`boolean`} - \n\n  * `value` {`string`} - \n\n  * `opened` {`boolean`} - \n\n  * `items` {`any[]`} - These are the items to be filtered\n\n  * `like` {`string`} - Filter regular expression string\n\n  * `where` {`string`} - The filter-by field of your items array of objects\n\n  * `caseSensitive` {`boolean`} - Enable case sensitivity when filtering\n\n  * `filtered` {`any[]`} - Filtered items\n\n  * `multiMatch` {`boolean`} - Enable multi match when filtering so that space separated words are matched\nas separate words as opposed to a single phrase",
      "attributes": [
        {
          "name": "item-limit",
          "description": "`item-limit` {`number`} - \n\nProperty: itemLimit\n\nDefault: 6"
        },
        {
          "name": "hide-input",
          "description": "`hide-input` {`boolean`} - \n\nProperty: hideInput\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "selection-position",
          "description": "`selection-position` {`boolean`} - \n\nProperty: selectionPosition\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value\n\nDefault: "
        },
        {
          "name": "opened",
          "description": "`opened` {`boolean`} - \n\nProperty: opened\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "items",
          "description": "`items` {`any[]`} - These are the items to be filtered\n\nProperty: items"
        },
        {
          "name": "like",
          "description": "`like` {`string`} - Filter regular expression string\n\nProperty: like"
        },
        {
          "name": "where",
          "description": "`where` {`string`} - The filter-by field of your items array of objects\n\nProperty: where"
        },
        {
          "name": "case-sensitive",
          "description": "`case-sensitive` {`boolean`} - Enable case sensitivity when filtering\n\nProperty: caseSensitive\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "filtered",
          "description": "`filtered` {`any[]`} - Filtered items\n\nProperty: filtered\n\nDefault: "
        },
        {
          "name": "multi-match",
          "description": "`multi-match` {`boolean`} - Enable multi match when filtering so that space separated words are matched\nas separate words as opposed to a single phrase\n\nProperty: multiMatch\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onitem-selected",
          "description": "`item-selected` {`CustomEvent<{ value: any; }>`} - "
        },
        {
          "name": "onfilter",
          "description": "`filter` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onfiltered-changed",
          "description": "`filtered-changed` {`CustomEvent<{ value: any[]; }>`} - "
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}