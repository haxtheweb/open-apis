{
  "version": 1,
  "tags": [
    {
      "name": "lrs-bridge-haxcms",
      "description": "`lrs-bridge-haxcms`\n`Adds HAXcms event listeners for our LRS.`\n\nAttributes:\n\n  * `endpoint` {`string`} - \n\nProperties:\n\n  * `endpoint` {`string`} - ",
      "attributes": [
        {
          "name": "endpoint",
          "description": "`endpoint` {`string`} - \n\nProperty: endpoint\n\nDefault: "
        }
      ]
    },
    {
      "name": "lrs-bridge",
      "description": "`lrs-bridge`\n`LRS element that captures lrn-emitter events and forwards them to the learnig record store.`\n\nAttributes:\n\n  * `endpoint` {`string`} - \n\nProperties:\n\n  * `endpoint` {`string`} - ",
      "attributes": [
        {
          "name": "endpoint",
          "description": "`endpoint` {`string`} - \n\nProperty: endpoint\n\nDefault: "
        }
      ]
    },
    {
      "name": "lrs-emitter",
      "description": "`lrs-emitter`\n`Emit learning statements occuring in your app.`\n\nEvents:\n\n  * `lrs-emitter` {`CustomEvent<{ verb: string; object: string; }>`} - \n\nAttributes:\n\n  * `verb` {`string`} - \n\n  * `event` {`string`} - \n\n  * `object` {`string`} - \n\n  * `element-visible` {`boolean`} - \n\nProperties:\n\n  * `verb` {`string`} - \n\n  * `event` {`string`} - \n\n  * `object` {`string`} - \n\n  * `elementVisible` {`boolean`} - \n\n  * `IOThresholds` {`number[]`} - \n\n  * `IORootMargin` {`string`} - \n\n  * `IOVisibleLimit` {`number`} - \n\n  * `IORemoveOnVisible` {`boolean`} - \n\n  * `IODelay` {`number`} - \n\n  * `IORoot` - ",
      "attributes": [
        {
          "name": "verb",
          "description": "`verb` {`string`} - \n\nProperty: verb\n\nDefault: "
        },
        {
          "name": "event",
          "description": "`event` {`string`} - \n\nProperty: event\n\nDefault: click"
        },
        {
          "name": "object",
          "description": "`object` {`string`} - \n\nProperty: object\n\nDefault: "
        },
        {
          "name": "element-visible",
          "description": "`element-visible` {`boolean`} - \n\nProperty: elementVisible\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onlrs-emitter",
          "description": "`lrs-emitter` {`CustomEvent<{ verb: string; object: string; }>`} - "
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}