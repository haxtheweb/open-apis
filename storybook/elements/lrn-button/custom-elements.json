{
  "version": 1,
  "tags": [
    {
      "name": "lrn-button",
      "description": "`lrn-button`\n`Simple button wrapper with a few options`\n\nEvents:\n\n  * `focus-changed` {`CustomEvent<{ focus: boolean; }>`} - \n\nAttributes:\n\n  * `show-href` {`string`} - What to display for the resource\n\n  * `raised` {`boolean`} - If the button should be visually lifted off the UI.\n\n  * `icon` {`string`} - simple-icon to use (with iconset if needed)\n\n  * `hover-class` {`string`} - Classes to add / subtract based on the item being hovered.\n\n  * `icon-class` {`string`} - Icon class in the event you want it to look different from the text.\n\n  * `inner-class` {`string`} - Inner container classes.\n\n  * `text-color` {`boolean`} - materializeCSS color class for text\n\n  * `prefetch` {`string`} - Allow for prefetch data on hover\n\n  * `alt` {`string`} - Alt via tooltip.\n\n  * `href` {`string`} - Standard href pass down\n\n  * `label` {`string`} - Label to place in the text area\n\n  * `target` {`string`} - \n\n  * `disabled` {`boolean`} - Disabled state.\n\n  * `focus-state` {`boolean`} - Tracks if focus state is applied\n\n  * `color` {`string`} - materializeCSS color class\n\n  * `accent-color` {`string`} - materializeCSS color class\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `showHref` {`string`} - What to display for the resource\n\n  * `raised` {`boolean`} - If the button should be visually lifted off the UI.\n\n  * `icon` {`string`} - simple-icon to use (with iconset if needed)\n\n  * `hoverClass` {`string`} - Classes to add / subtract based on the item being hovered.\n\n  * `iconClass` {`string`} - Icon class in the event you want it to look different from the text.\n\n  * `innerClass` {`string`} - Inner container classes.\n\n  * `textColor` {`boolean`} - materializeCSS color class for text\n\n  * `prefetch` {`string`} - Allow for prefetch data on hover\n\n  * `alt` {`string`} - Alt via tooltip.\n\n  * `href` {`string`} - Standard href pass down\n\n  * `label` {`string`} - Label to place in the text area\n\n  * `target` {`string`} - \n\n  * `disabled` {`boolean`} - Disabled state.\n\n  * `focusState` {`boolean`} - Tracks if focus state is applied\n\n  * `color` {`string`} - materializeCSS color class\n\n  * `accentColor` {`string`} - materializeCSS color class\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "show-href",
          "description": "`show-href` {`string`} - What to display for the resource\n\nProperty: showHref"
        },
        {
          "name": "raised",
          "description": "`raised` {`boolean`} - If the button should be visually lifted off the UI.\n\nProperty: raised",
          "valueSet": "v"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - simple-icon to use (with iconset if needed)\n\nProperty: icon"
        },
        {
          "name": "hover-class",
          "description": "`hover-class` {`string`} - Classes to add / subtract based on the item being hovered.\n\nProperty: hoverClass"
        },
        {
          "name": "icon-class",
          "description": "`icon-class` {`string`} - Icon class in the event you want it to look different from the text.\n\nProperty: iconClass"
        },
        {
          "name": "inner-class",
          "description": "`inner-class` {`string`} - Inner container classes.\n\nProperty: innerClass"
        },
        {
          "name": "text-color",
          "description": "`text-color` {`boolean`} - materializeCSS color class for text\n\nProperty: textColor",
          "valueSet": "v"
        },
        {
          "name": "prefetch",
          "description": "`prefetch` {`string`} - Allow for prefetch data on hover\n\nProperty: prefetch"
        },
        {
          "name": "alt",
          "description": "`alt` {`string`} - Alt via tooltip.\n\nProperty: alt"
        },
        {
          "name": "href",
          "description": "`href` {`string`} - Standard href pass down\n\nProperty: href\n\nDefault: #"
        },
        {
          "name": "label",
          "description": "`label` {`string`} - Label to place in the text area\n\nProperty: label\n\nDefault: "
        },
        {
          "name": "target",
          "description": "`target` {`string`} - \n\nProperty: target\n\nDefault: "
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - Disabled state.\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "focus-state",
          "description": "`focus-state` {`boolean`} - Tracks if focus state is applied\n\nProperty: focusState\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - materializeCSS color class\n\nProperty: color\n\nDefault: grey"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - materializeCSS color class\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onfocus-changed",
          "description": "`focus-changed` {`CustomEvent<{ focus: boolean; }>`} - "
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}